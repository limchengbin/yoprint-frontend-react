{"ast":null,"code":"import { GET_ANIME_START, GET_ANIME_SUCESS, GET_ANIME_FAIL, GET_ANIME_DETAILS_START, GET_ANIME_DETAILS_SUCESS, GET_ANIME_DETAILS_FAIL } from '../constant/action_constant';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { toast } from 'react-toastify';\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.jikan.moe/v4',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst controller = new AbortController();\nexport const fetchAnimeList = (data = null) => dispatch => {\n  dispatch({\n    type: GET_ANIME_START\n  });\n  const {\n    searchValue,\n    limit,\n    page\n  } = data;\n  let url = `/anime?limit=${limit}&page=${page}`;\n  if (!_.isEmpty(searchValue)) {\n    url += '&q=' + searchValue;\n  }\n  axiosInstance.get(url, {\n    signal: controller.signal\n  }).then(res => {\n    var _res$data$data, _res$data, _res$data$pagination, _res$data2;\n    dispatch({\n      type: GET_ANIME_SUCESS,\n      data: (_res$data$data = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data) !== null && _res$data$data !== void 0 ? _res$data$data : {},\n      pagination: (_res$data$pagination = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.pagination) !== null && _res$data$pagination !== void 0 ? _res$data$pagination : {}\n    });\n  }).catch(err => {\n    var _err$response$data$me, _err$response, _err$response$data;\n    dispatch({\n      type: GET_ANIME_FAIL,\n      data: {},\n      pagination: {}\n    });\n    let messages = (_err$response$data$me = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.messages) !== null && _err$response$data$me !== void 0 ? _err$response$data$me : {};\n    Object.values(messages).map(category => {\n      category.map(error => {\n        toast(error);\n      });\n    });\n  });\n};\nexport const fetchAnimeDetails = id => dispatch => {\n  let url = `/anime/${id}`;\n  dispatch({\n    type: GET_ANIME_DETAILS_START\n  });\n  axiosInstance.get(url, {\n    signal: controller.signal\n  }).then(res => {\n    var _res$data$data2, _res$data3;\n    dispatch({\n      type: GET_ANIME_DETAILS_SUCESS,\n      data: (_res$data$data2 = res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.data) !== null && _res$data$data2 !== void 0 ? _res$data$data2 : {}\n    });\n  }).catch(err => {\n    var _err$response$data$me2, _err$response2, _err$response2$data;\n    dispatch({\n      type: GET_ANIME_DETAILS_FAIL\n    });\n    let messages = (_err$response$data$me2 = err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.messages) !== null && _err$response$data$me2 !== void 0 ? _err$response$data$me2 : {};\n    Object.values(messages).map(category => {\n      category.map(error => {\n        toast(error);\n      });\n    });\n  });\n};","map":{"version":3,"names":["GET_ANIME_START","GET_ANIME_SUCESS","GET_ANIME_FAIL","GET_ANIME_DETAILS_START","GET_ANIME_DETAILS_SUCESS","GET_ANIME_DETAILS_FAIL","axios","_","toast","axiosInstance","create","baseURL","headers","controller","AbortController","fetchAnimeList","data","dispatch","type","searchValue","limit","page","url","isEmpty","get","signal","then","res","_res$data$data","_res$data","_res$data$pagination","_res$data2","pagination","catch","err","_err$response$data$me","_err$response","_err$response$data","messages","response","Object","values","map","category","error","fetchAnimeDetails","id","_res$data$data2","_res$data3","_err$response$data$me2","_err$response2","_err$response2$data"],"sources":["C:/Users/Bin/Documents/yoprint-frontend-react/src/actions/animeAction.js"],"sourcesContent":["import {\r\n    GET_ANIME_START,\r\n    GET_ANIME_SUCESS,\r\n    GET_ANIME_FAIL,\r\n    GET_ANIME_DETAILS_START,\r\n    GET_ANIME_DETAILS_SUCESS,\r\n    GET_ANIME_DETAILS_FAIL\r\n} from '../constant/action_constant';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://api.jikan.moe/v4',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nconst controller = new AbortController();\r\n\r\nexport const fetchAnimeList = (data = null) => (dispatch) => {\r\n    dispatch({ type: GET_ANIME_START });\r\n    const { searchValue, limit, page } = data;\r\n    let url = `/anime?limit=${limit}&page=${page}`;\r\n\r\n    if (!_.isEmpty(searchValue)) {\r\n        url += '&q=' + searchValue;\r\n    }\r\n\r\n    axiosInstance.get(url, { signal: controller.signal })\r\n        .then((res) => {\r\n            dispatch({ type: GET_ANIME_SUCESS, data: res?.data?.data ?? {}, pagination: res?.data?.pagination ?? {} });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: GET_ANIME_FAIL, data: {}, pagination: {} });\r\n            let messages = err?.response?.data?.messages ?? {};\r\n            Object.values(messages).map((category) => {\r\n                category.map((error) => {\r\n                    toast(error);\r\n                });\r\n            });\r\n        });\r\n}\r\n\r\nexport const fetchAnimeDetails = (id) => (dispatch) => {\r\n    let url = `/anime/${id}`;\r\n    dispatch({ type: GET_ANIME_DETAILS_START });\r\n    axiosInstance.get(url, { signal: controller.signal })\r\n        .then((res) => {\r\n            dispatch({ type: GET_ANIME_DETAILS_SUCESS, data: res?.data?.data ?? {} });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: GET_ANIME_DETAILS_FAIL });\r\n            let messages = err?.response?.data?.messages ?? {};\r\n            Object.values(messages).map((category) => {\r\n                category.map((error) => {\r\n                    toast(error);\r\n                });\r\n            });\r\n        });\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}